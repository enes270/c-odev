#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define ROWS_A 2
#define COLS_A 3

#define ROWS_B 3
#define COLS_B 2

int matrixA[ROWS_A][COLS_A];
int matrixB[ROWS_B][COLS_B];

void generateMatrix(int rows, int cols, int matrix[rows][cols]);

void printMatrix(int rows, int cols, int matrix[rows][cols]);

void sumMatrix(int matrixA[ROWS_A][COLS_A], int matrixB[ROWS_B][COLS_B]);

void multiMatrix(int matrixA[ROWS_A][COLS_A], int matrixB[ROWS_B][COLS_B]);

int main() {
    srand(time(NULL));

    printf("Matrix A\n");
    generateMatrix(ROWS_A, COLS_A, matrixA);

    printf("\nMatrix B\n");
    generateMatrix(ROWS_B, COLS_B, matrixB);

    printf("\nMatrix Sum\n");
    sumMatrix(matrixA, matrixB);

    printf("\nMatrix Multiplication\n");
    multiMatrix(matrixA, matrixB);

    return 0;
}

void generateMatrix(int rows, int cols, int matrix[rows][cols]) {
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            matrix[i][j] = rand() % 100 + 1;
        }
    }

    printMatrix(rows, cols, matrix);
}

void printMatrix(int rows, int cols, int matrix[rows][cols]) {
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            printf("%d ", matrix[i][j]);
        }

        printf("\n");
    }
}

void sumMatrix(int matrixA[ROWS_A][COLS_A], int matrixB[ROWS_B][COLS_B]) {
    if (ROWS_A != ROWS_B || COLS_A != COLS_B) {
        printf("Matrix sizes are incompatible.\n");
        return;
    }

    int result[ROWS_A][COLS_A];

    for (int i = 0; i < ROWS_A; i++) {
        for (int j = 0; j < COLS_A; j++) {
            result[i][j] = matrixA[i][j] + matrixB[i][j];
        }
    }

    printMatrix(ROWS_A, COLS_A, result);
}

void multiMatrix(int matrixA[ROWS_A][COLS_A], int matrixB[ROWS_B][COLS_B]) {
    if (COLS_A != ROWS_B) {
        printf("Matrix sizes are incompatible.\n");
        return;
    }

    int result[ROWS_A][COLS_B];

    for (int i = 0; i < ROWS_A; i++) {
        for (int j = 0; j < COLS_B; j++) {
            result[i][j] = 0;
            for (int k = 0; k < COLS_A; k++) {
                result[i][j] += matrixA[i][k] * matrixB[k][j];
            }
        }
    }

    printMatrix(ROWS_A, COLS_B, result);
}
